#include <queue>
#include <iostream>
#include <string>
#include <unordered_map>
#include <cstdint>

using namespace std;

int main(void) {
    uint8_t in = 70;
    string elements[93] = {
        "0", // N/A
        "22", // 1
        "13112221133211322112211213322112", // 2
        "312211322212221121123222112", // 3
        "111312211312113221133211322112211213322112", // 4
        "1321132122211322212221121123222112", // 5
        "3113112211322112211213322112", // 6
        "111312212221121123222112", // 7
        "132112211213322112", // 8
        "31121123222112", // 9
        "111213322112", // 10
        "123222112", // 11
        "3113322112", // 12
        "1113222112", // 13
        "1322112", // 14
        "311311222112", // 15
        "1113122112", // 16
        "132112", // 17
        "3112", // 18
        "1112", // 19
        "12", // 20
        "3113112221133112", // 21
        "11131221131112", // 22
        "13211312", // 23
        "31132", // 24
        "111311222112", // 25
        "13122112", // 26
        "32112", // 27
        "11133112", // 28
        "131112", // 29
        "312", // 30
        "13221133122211332", // 31
        "31131122211311122113222", // 32
        "11131221131211322113322112", // 33
        "13211321222113222112", // 34
        "3113112211322112", // 35
        "11131221222112", // 36
        "1321122112", // 37
        "3112112", // 38
        "1112133", // 39
        "12322211331222113112211", // 40
        "1113122113322113111221131221", // 41
        "13211322211312113211", // 42
        "311322113212221", // 43
        "132211331222113112211", // 44
        "311311222113111221131221", // 45
        "111312211312113211", // 46
        "132113212221", // 47
        "3113112211", // 48
        "11131221", // 49
        "13211", // 50
        "3112221", // 51
        "1322113312211", // 52
        "311311222113111221", // 53
        "11131221131211", // 54
        "13211321", // 55
        "311311", // 56
        "11131", // 57
        "1321133112", // 58
        "31131112", //59
        "111312", // 60
        "132", // 61
        "311332", // 62
        "1113222", // 63
        "13221133112", // 64
        "3113112221131112", // 65
        "111312211312", // 66
        "1321132", // 67
        "311311222", // 68
        "11131221133112", // 69
        "1321131112", // 70
        "311312", // 71
        "11132", // 72
        "13112221133211322112211213322113", // 73
        "312211322212221121123222113", // 74
        "111312211312113221133211322112211213322113", // 75
        "1321132122211322212221121123222113", // 76
        "3113112211322112211213322113", // 77
        "111312212221121123222113", // 78
        "132112211213322113", // 79
        "31121123222113", // 80
        "111213322113", // 81
        "123222113", // 82
        "3113322113", // 83
        "1113222113", // 84
        "1322113", // 85
        "311311222113", // 86
        "1113122113", // 87
        "132113", // 88
        "3113", // 89
        "1113", // 90
        "13", // 91
        "3", // 92
    };
    vector<uint8_t> decaysInto[93] = {
        {0},
        {1},
        {72,91,1,20,3},
        {2},
        {32,20,3},
        {4},
        {5},
        {6},
        {7},
        {8},
        {9},
        {10},
        {61,11},
        {12},
        {13},
        {67,14},
        {15},
        {16},
        {17},
        {18},
        {19},
        {67,91,1,20,27},
        {21},
        {22},
        {23},
        {24,14},
        {25},
        {26},
        {30,27},
        {28},
        {29},
        {63,20,89,1,20,30},
        {67,31},
        {32,11},
        {33},
        {34},
        {35},
        {36},
        {37},
        {38,92},
        {39,1,20,43},
        {68,40},
        {41},
        {42},
        {63,20,43},
        {67,44},
        {45},
        {46},
        {47},
        {48},
        {49},
        {61,50},
        {63,20,51},
        {67,52},
        {53},
        {54},
        {55},
        {56},
        {57,1,20,27},
        {58},
        {59},
        {60},
        {61,20,30},
        {62},
        {63,20,27},
        {67,64},
        {65},
        {66},
        {67,61},
        {68,20,27},
        {69},
        {70},
        {71},
        {72,91,1,20,74},
        {73},
        {32,20,74},
        {75},
        {76},
        {77},
        {78},
        {79},
        {80},
        {81},
        {61,82},
        {83},
        {84},
        {67,85},
        {86},
        {87},
        {88},
        {89},
        {90},
        {91}
    };

    queue<uint8_t> q;
    q.push(in);
    uint8_t i = 0;
    uint8_t n = 75;
    while (i < n) {
        ++i;
        uint64_t qn = q.size();
        if (i > 40) {
            cout << "iteration " << int(i) << endl;
        }
        while (qn) {
            --qn;
            auto cur = q.front();
            q.pop();
            for (auto d : decaysInto[cur]) {
                q.push(d);
            }
        }
    }
    uint64_t totalLength = 0;
    for (; !q.empty(); q.pop()) {
        totalLength += elements[q.front()].size();
    }
    cout << totalLength << endl;

    return 0;
}